name: Build and Push Backstage Image

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "branch to build"
        required: true
        default: backstage-image
  push:
    branches:
      - backstage-image



jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: backstage-image
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2    
       
    - name: Install packages
      run: NODE_OPTIONS="--max_old_space_size=4096" yarn install
      
      
    - name: Bundle up
      run: NODE_OPTIONS="--max_old_space_size=4096" yarn build:backend
       
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::209466391465:role/GitHubAction-AssumeRoleWithAction
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ github.sha }}
        DOCKER_BUILDKIT: 1
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
